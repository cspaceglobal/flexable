{"version":3,"sources":["../src/Row.js"],"names":["RowHOC","Cell","_key","className","style","rowData","columnDefinitions","children","includeVerticalScrollbar","remainingProps","_className","transformChildren","_children","_passthroughProps","Children","map","c","i","isValidElement","columnDefinition","props","omitProps","cloneElement","d","undefined","propTypes","string","isRequired","object","array","bool","defaultProps","DefaultRow"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEO,IAAMA,0BAAS,SAATA,MAAS,CAACC,IAAD;AAAA,WAAU,gBAS1B;AAAA,YARFC,IAQE,QARFA,IAQE;AAAA,YAPFC,SAOE,QAPFA,SAOE;AAAA,YANFC,KAME,QANFA,KAME;AAAA,YALFC,OAKE,QALFA,OAKE;AAAA,YAJFC,iBAIE,QAJFA,iBAIE;AAAA,YAHFC,QAGE,QAHFA,QAGE;AAAA,YAFFC,wBAEE,QAFFA,wBAEE;AAAA,YADCC,cACD;;AACF,YAAMC,cAAiBP,YAAeA,SAAf,SAA8B,EAA/C,kBAAN;AACA,YAAMQ,oBAAoB,SAApBA,iBAAoB,CAACC,SAAD,EAAYC,iBAAZ;AAAA,mBAAmC,gBAAMC,QAAN,CAAeC,GAAf,CAAmBH,SAAnB,EAA8B,UAACI,CAAD,EAAIC,CAAJ,EAAU;AACjG,oBAAI,CAAC,gBAAMC,cAAN,CAAqBF,CAArB,CAAL,EAA8B;AAC3B,2BAAOA,CAAP;AACF;AACD,oBAAMG,mBAAmBb,oBAAoBA,kBAAkBW,CAAlB,CAApB,GAA2C,sBAAc,IAAd,CAApE;AACA,oBAAMG,QAAQ,iDAAWP,iBAAX,IAA8BM,kCAA9B,EAAgDd,gBAAhD,KAA2DI,eAAeY,SAAf,IAA4B,EAAvF,CAAd;AACA,uBAAO,gBAAMC,YAAN,CAAmBN,CAAnB,EAAsBI,KAAtB,CAAP;AACH,aAP4D,CAAnC;AAAA,SAA1B;;AASA,YAAG,CAACb,QAAJ,EAAa;AACT,mBACI;AAAA;AAAA,2CAAqBE,cAArB;AACI,2BAAOL,KADX;AAEI,+BAAWM,UAFf;AAGI,uCAAmBC,iBAHvB;AAIKL,kCAAkBS,GAAlB,CAAsB,UAACQ,CAAD,EAAIN,CAAJ,EAAU;AAC7B,2BAAQ,8BAAC,IAAD,IAAM,KAAQf,IAAR,cAAqBe,CAA3B,GAAR;AACH,iBAFA,CAJL;AAOKT,2CACK,uCAAK,WAAU,sBAAf,GADL,GAEKgB;AATV,aADJ;AAaH;;AAED,eACI;AAAA;AAAA,uCAAqBf,cAArB;AACI,uBAAOL,KADX;AAEI,2BAAWM,UAFf;AAGI,mCAAmBC,iBAHvB;AAIKJ,oBAJL;AAKKC,yCAA6B,IAA7B,IACG,uCAAK,WAAU,sBAAf;AANR,SADJ;AAWH,KA/CqB;AAAA,CAAf;;AAiDPR,OAAOyB,SAAP,GAAmB;AACfvB,UAAM,iBAAUwB,MAAV,CAAiBC,UADR;AAEfxB,eAAW,iBAAUuB,MAFN;AAGftB,WAAO,iBAAUwB,MAHF;AAIfvB,aAAS,iBAAUuB,MAJJ;AAKftB,uBAAmB,iBAAUuB,KALd;AAMfrB,8BAA0B,iBAAUsB;AANrB,CAAnB;;AASA9B,OAAO+B,YAAP,GAAsB;AAClBvB,8BAA0B;AADR,CAAtB;;AAIA,IAAMwB,aAAahC,sBAAnB;;kBAEegC,U","file":"Row.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\nimport except from 'except';\r\n\r\nimport FlexableElement from './FlexableElement';\r\nimport DefaultCell from './Cell';\r\n\r\nexport const RowHOC = (Cell) => ({\r\n    _key,\r\n    className,\r\n    style,\r\n    rowData,\r\n    columnDefinitions,\r\n    children,\r\n    includeVerticalScrollbar,\r\n    ...remainingProps\r\n}) => {\r\n    const _className = `${ className ? `${className} ` : '' }flexable-row`;\r\n    const transformChildren = (_children, _passthroughProps) => (React.Children.map(_children, (c, i) => {\r\n        if (!React.isValidElement(c)) {\r\n           return c;\r\n        }\r\n        const columnDefinition = columnDefinitions ? columnDefinitions[i] : Object.create(null);\r\n        const props = except({..._passthroughProps, columnDefinition, rowData }, remainingProps.omitProps || []);\r\n        return React.cloneElement(c, props);\r\n    }));\r\n\r\n    if(!children){\r\n        return (\r\n            <FlexableElement {...remainingProps}\r\n                style={style}\r\n                className={_className}\r\n                transformChildren={transformChildren} >\r\n                {columnDefinitions.map((d, i) => {\r\n                    return (<Cell key={`${_key}-cell-${i}`} />)\r\n                })}\r\n                {includeVerticalScrollbar\r\n                    ? <div className=\"flexable-scroll-cell\"></div>\r\n                    : undefined }\r\n            </FlexableElement>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <FlexableElement {...remainingProps}\r\n            style={style}\r\n            className={_className}\r\n            transformChildren={transformChildren} >\r\n            {children}\r\n            {includeVerticalScrollbar === true &&\r\n                <div className=\"flexable-scroll-cell\"></div>}\r\n        </FlexableElement>\r\n    );\r\n\r\n};\r\n\r\nRowHOC.propTypes = {\r\n    _key: PropTypes.string.isRequired,\r\n    className: PropTypes.string,\r\n    style: PropTypes.object,\r\n    rowData: PropTypes.object,\r\n    columnDefinitions: PropTypes.array,\r\n    includeVerticalScrollbar: PropTypes.bool\r\n};\r\n\r\nRowHOC.defaultProps = {\r\n    includeVerticalScrollbar: true\r\n};\r\n\r\nconst DefaultRow = RowHOC(DefaultCell);\r\n\r\nexport default DefaultRow;"]}