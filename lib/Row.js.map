{"version":3,"sources":["../src/Row.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEO,IAAM,0BAAS,SAAT,MAAS,CAAC,IAAD;WAAU,gBAS1B;YARF,iBAQE;YAPF,2BAOE;YANF,mBAME;YALF,uBAKE;YAJF,2CAIE;YAHF,yBAGE;YAFF,yDAEE;YADC,sKACD;;AACF,YAAM,cAAiB,YAAe,eAAf,GAA8B,EAA9B,kBAAjB,CADJ;AAEF,YAAM,oBAAoB,SAApB,iBAAoB,CAAC,SAAD,EAAY,iBAAZ;mBAAmC,gBAAM,QAAN,CAAe,GAAf,CAAmB,SAAnB,EAA8B,UAAC,CAAD,EAAI,CAAJ,EAAU;AACjG,oBAAI,CAAC,gBAAM,cAAN,CAAqB,CAArB,CAAD,EAA0B;AAC3B,2BAAO,CAAP,CAD2B;iBAA9B;AAGA,oBAAM,mBAAmB,oBAAoB,kBAAkB,CAAlB,CAApB,GAA2C,sBAAc,IAAd,CAA3C,CAJwE;AAKjG,oBAAM,QAAQ,iDAAW,mBAAsB,oBAAkB,mBAAnD,EAA8D,eAAe,SAAf,IAA4B,EAA5B,CAAtE,CAL2F;AAMjG,uBAAO,gBAAM,YAAN,CAAmB,CAAnB,EAAsB,KAAtB,CAAP,CANiG;aAAV;SAAjE,CAFxB;;AAWF,YAAG,CAAC,QAAD,EAAU;AACT,mBACI;;2CAAqB;AACjB,2BAAO,KAAP;AACA,+BAAW,UAAX;AACA,uCAAmB,iBAAnB,GAHJ;gBAIK,kBAAkB,GAAlB,CAAsB,UAAC,CAAD,EAAI,CAAJ,EAAU;AAC7B,2BAAQ,8BAAC,IAAD,IAAM,KAAQ,kBAAa,CAArB,EAAN,CAAR,CAD6B;iBAAV,CAJ3B;gBAOK,2BACK,uCAAK,WAAU,sBAAV,EAAL,CADL,GAEK,SAFL;aART,CADS;SAAb;;AAgBA,eACI;;uCAAqB;AACjB,uBAAO,KAAP;AACA,2BAAW,UAAX;AACA,mCAAmB,iBAAnB,GAHJ;YAIK,QAJL;YAKK,6BAA6B,IAA7B,IACG,uCAAK,WAAU,sBAAV,EAAL,CADH;SANT,CA3BE;KAT0B;CAAV;;AAiDtB,OAAO,SAAP,GAAmB;AACf,UAAM,iBAAU,MAAV,CAAiB,UAAjB;AACN,eAAW,iBAAU,MAAV;AACX,WAAO,iBAAU,MAAV;AACP,aAAS,iBAAU,MAAV;AACT,uBAAmB,iBAAU,KAAV;AACnB,8BAA0B,iBAAU,IAAV;CAN9B;;AASA,OAAO,YAAP,GAAsB;AAClB,8BAA0B,IAA1B;CADJ;;AAIA,IAAM,aAAa,sBAAb;;kBAES","file":"Row.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\nimport except from 'except';\r\n\r\nimport FlexableElement from './FlexableElement';\r\nimport DefaultCell from './Cell';\r\n\r\nexport const RowHOC = (Cell) => ({\r\n    _key,\r\n    className,\r\n    style,\r\n    rowData,\r\n    columnDefinitions,\r\n    children,\r\n    includeVerticalScrollbar,\r\n    ...remainingProps\r\n}) => {\r\n    const _className = `${ className ? `${className} ` : '' }flexable-row`;\r\n    const transformChildren = (_children, _passthroughProps) => (React.Children.map(_children, (c, i) => {\r\n        if (!React.isValidElement(c)) {\r\n           return c;\r\n        }\r\n        const columnDefinition = columnDefinitions ? columnDefinitions[i] : Object.create(null);\r\n        const props = except({..._passthroughProps, ...columnDefinition, rowData }, remainingProps.omitProps || []);\r\n        return React.cloneElement(c, props);\r\n    }));\r\n\r\n    if(!children){\r\n        return (\r\n            <FlexableElement {...remainingProps}\r\n                style={style}\r\n                className={_className}\r\n                transformChildren={transformChildren} >\r\n                {columnDefinitions.map((d, i) => {\r\n                    return (<Cell key={`${_key}-cell-${i}`} />)\r\n                })}\r\n                {includeVerticalScrollbar\r\n                    ? <div className=\"flexable-scroll-cell\"></div>\r\n                    : undefined }\r\n            </FlexableElement>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <FlexableElement {...remainingProps}\r\n            style={style}\r\n            className={_className}\r\n            transformChildren={transformChildren} >\r\n            {children}\r\n            {includeVerticalScrollbar === true &&\r\n                <div className=\"flexable-scroll-cell\"></div>}\r\n        </FlexableElement>\r\n    );\r\n\r\n};\r\n\r\nRowHOC.propTypes = {\r\n    _key: PropTypes.string.isRequired,\r\n    className: PropTypes.string,\r\n    style: PropTypes.object,\r\n    rowData: PropTypes.object,\r\n    columnDefinitions: PropTypes.array,\r\n    includeVerticalScrollbar: PropTypes.bool\r\n};\r\n\r\nRowHOC.defaultProps = {\r\n    includeVerticalScrollbar: true\r\n};\r\n\r\nconst DefaultRow = RowHOC(DefaultCell);\r\n\r\nexport default DefaultRow;"]}