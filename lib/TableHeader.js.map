{"version":3,"sources":["../src/TableHeader.js"],"names":["TableHeaderHOC","ColumnHeaderRow","className","style","tableData","columnDefinitions","rowClassName","rowStyle","setRef","includeVerticalScrollbar","remainingProps","transformRows","keyPrefix","children","passthroughProps","Children","map","c","i","isValidElement","cloneElement","_key","rowData","propTypes","string","object","array","func","bool","defaultProps","DefaultColumnHeaderRow","DefaultTableHeader"],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AAEO,IAAMA,iBAAiB,SAAjBA,cAAiB,CAACC,eAAD;AAAA,WAAqB,gBAU7C;AAAA,YATFC,SASE,QATFA,SASE;AAAA,YARFC,KAQE,QARFA,KAQE;AAAA,YAPFC,SAOE,QAPFA,SAOE;AAAA,YANFC,iBAME,QANFA,iBAME;AAAA,YALFC,YAKE,QALFA,YAKE;AAAA,YAJFC,QAIE,QAJFA,QAIE;AAAA,YAHFC,MAGE,QAHFA,MAGE;AAAA,YAFFC,wBAEE,QAFFA,wBAEE;AAAA,YADCC,cACD;;AACF,YAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,SAAD;AAAA,mBAAe,UAACC,QAAD,EAAWC,gBAAX;AAAA,uBAAiC,gBAAMC,QAAN,CAAeC,GAAf,CAAmBH,QAAnB,EAA6B,UAACI,CAAD,EAAIC,CAAJ,EAAU;AACzG,wBAAI,CAAC,gBAAMC,cAAN,CAAqBF,CAArB,CAAL,EAA8B;AAC1B,+BAAOA,CAAP;AACH;;AAED,2BAAO,gBAAMG,YAAN,CAAmBH,CAAnB;AACHI,8BAAST,SAAT,SAAsBM,CADnB;AAEHf,+BAAOI,QAFJ;AAGHL,mCAAWI,YAHR;AAIHD,2CAAmBA,iBAJhB;AAKHiB,iCAASlB,UAAUc,CAAV,CALN;AAMHT;AANG,uBAOAK,gBAPA,EAAP;AASH,iBAdqE,CAAjC;AAAA,aAAf;AAAA,SAAtB;;AAgBA,YAAG,CAACN,MAAJ,EAAY;AACR,mBACI;AAAA;AAAA,2CAAqBE,cAArB;AACI,wBAAG,uBADP;AAEI,+BAAWR,SAFf;AAGI,2BAAOC,KAHX;AAII,uCAAmBQ,cAAc,YAAd,CAJvB;AAKK,iBAACD,eAAeG,QAAhB,IACG,8BAAC,eAAD,IAAiB,iBAAjB,GANR;AAOK,iBAAC,CAACH,eAAeG,QAAjB,IACGH,eAAeG;AARvB,aADJ;AAYH;;AAED,eACI;AAAA;AAAA,uCAAuBH,cAAvB;AACI,oBAAG,uBADP;AAEI,qBAAKF,MAFT;AAGI,2BAAWN,SAHf;AAII,uBAAOC,KAJX;AAKI,mCAAmBQ,cAAc,YAAd,CALvB;AAMK,aAACD,eAAeG,QAAhB,IACG,8BAAC,eAAD,IAAiB,iBAAjB,GAPR;AAQK,aAAC,CAACH,eAAeG,QAAjB,IACGH,eAAeG;AATvB,SADJ;AAaH,KAvD6B;AAAA,CAAvB;;;AAyDPb,eAAeuB,SAAf,GAA2B;AACvBrB,eAAW,iBAAUsB,MADE;AAEvBlB,kBAAc,iBAAUkB,MAFD;AAGvBrB,WAAO,iBAAUsB,MAHM;AAIvBlB,cAAU,iBAAUkB,MAJG;AAKvBrB,eAAW,iBAAUqB,MALE;AAMvBpB,uBAAmB,iBAAUqB,KANN;AAOvBlB,YAAQ,iBAAUmB,IAPK;AAQvBlB,8BAA0B,iBAAUmB;AARb,CAA3B;;AAWA5B,eAAe6B,YAAf,GAA8B;AAC1BpB,8BAA0B;AADA,CAA9B;;AAIA,IAAMqB,yBAAyB,wCAA/B;AACA,IAAMC,qBAAqB/B,eAAe8B,sBAAf,CAA3B;;kBAEeC,kB","file":"TableHeader.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\n\r\nimport FlexableElement from './FlexableElement';\r\nimport FlexableComponent from './FlexableComponent';\r\nimport ColumnHeaderCell from './ColumnHeader';\r\nimport { RowHOC } from './Row';\r\n\r\nexport const TableHeaderHOC = (ColumnHeaderRow) => ({\r\n    className,\r\n    style,\r\n    tableData,\r\n    columnDefinitions,\r\n    rowClassName,\r\n    rowStyle,\r\n    setRef,\r\n    includeVerticalScrollbar,\r\n    ...remainingProps\r\n}) => {\r\n    const transformRows = (keyPrefix) => (children, passthroughProps) => (React.Children.map(children, (c, i) => {\r\n        if (!React.isValidElement(c)) {\r\n            return c;\r\n        }\r\n        \r\n        return React.cloneElement(c, {\r\n            _key: `${keyPrefix}-${i}`,\r\n            style: rowStyle,\r\n            className: rowClassName,\r\n            columnDefinitions: columnDefinitions,\r\n            rowData: tableData[i],\r\n            includeVerticalScrollbar,\r\n            ...passthroughProps\r\n        });\r\n    }));\r\n\r\n    if(!setRef) {\r\n        return (\r\n            <FlexableElement {...remainingProps}\r\n                id=\"flexable-table-header\"\r\n                className={className}\r\n                style={style}\r\n                transformChildren={transformRows('header-row')}>\r\n                {!remainingProps.children &&\r\n                    <ColumnHeaderRow key={`header-row`}/>}\r\n                {!!remainingProps.children &&\r\n                    remainingProps.children}\r\n            </FlexableElement>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <FlexableComponent {...remainingProps}\r\n            id=\"flexable-table-header\"\r\n            ref={setRef}\r\n            className={className}\r\n            style={style}\r\n            transformChildren={transformRows('header-row')}>\r\n            {!remainingProps.children &&\r\n                <ColumnHeaderRow key={`header-row`}/>}\r\n            {!!remainingProps.children &&\r\n                remainingProps.children}\r\n        </FlexableComponent>\r\n    );\r\n};\r\n\r\nTableHeaderHOC.propTypes = {\r\n    className: PropTypes.string,\r\n    rowClassName: PropTypes.string,\r\n    style: PropTypes.object,\r\n    rowStyle: PropTypes.object,\r\n    tableData: PropTypes.object,\r\n    columnDefinitions: PropTypes.array,\r\n    setRef: PropTypes.func,\r\n    includeVerticalScrollbar: PropTypes.bool\r\n};\r\n\r\nTableHeaderHOC.defaultProps = {\r\n    includeVerticalScrollbar: true\r\n};\r\n\r\nconst DefaultColumnHeaderRow = RowHOC(ColumnHeaderCell);\r\nconst DefaultTableHeader = TableHeaderHOC(DefaultColumnHeaderRow);\r\n\r\nexport default DefaultTableHeader;"]}