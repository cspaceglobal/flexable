{"version":3,"sources":["../src/TableBody.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;;;AAEO,IAAM,sCAAe,SAAf,YAAe,CAAC,GAAD;WAAS,gBAS/B;YARF,2BAQE;YAPF,mBAOE;YANF,2BAME;YALF,2CAKE;YAJF,iCAIE;YAHF,yBAGE;YAFF,yDAEE;YADC,gLACD;;AACF,YAAM,mBAAgB,2BAA2B,kCAA3B,GAAgE,EAAhE,KAAsE,kBAAgB,SAAhB,GAA6B,EAA7B,CAAtF,CADJ;AAEF,YAAM,gBAAgB,SAAhB,aAAgB,CAAC,SAAD;mBAAe,UAAC,QAAD,EAAW,gBAAX;uBAAiC,gBAAM,QAAN,CAAe,GAAf,CAAmB,QAAnB,EAA6B,UAAC,CAAD,EAAI,CAAJ,EAAU;AACzG,2BAAO,gBAAM,YAAN,CAAmB,CAAnB;AACH,6BAAQ,kBAAa,CAArB;AACA,+BAAO,QAAP;AACA,mCAAW,YAAX;AACA,2CAAmB,iBAAnB;AACA,iCAAS,UAAU,CAAV,CAAT;AACA;uBACG,iBAPA,CAAP,CADyG;iBAAV;aAA9D;SAAf,CAFpB;;AAcF,eACI;;uCAAqB;AACJ,oBAAG,qBAAH;AACA,2BAAW,UAAX;AACA,uBAAO,KAAP;AACA,mCAAmB,cAAc,KAAd,CAAnB,GAJjB;YAKK,CAAC,eAAe,QAAf,IAA2B,UAAU,GAAV,CAAc,YAAM;AAC7C,uBAAQ,8BAAC,GAAD,OAAR,CAD6C;aAAN,CAA1C;SANT,CAdE;KAT+B;CAAT;;AAoC5B,aAAa,SAAb,GAAyB;AACrB,eAAW,iBAAU,MAAV;AACX,kBAAc,iBAAU,MAAV;AACd,WAAO,iBAAU,MAAV;AACP,cAAU,iBAAU,MAAV;AACV,eAAW,iBAAU,MAAV;AACX,uBAAmB,iBAAU,KAAV;AACnB,8BAA0B,iBAAU,IAAV;CAP9B;;AAUA,aAAa,YAAb,GAA4B;AACxB,8BAA0B,IAA1B;CADJ;;AAIA,IAAM,mBAAmB,2BAAnB;;kBAES","file":"TableBody.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\n\r\nimport FlexableElement from './FlexableElement';\r\nimport DefaultRow from './Row';\r\n\r\nexport const TableBodyHOC = (Row) => ({\r\n    className,\r\n    style,\r\n    tableData,\r\n    columnDefinitions,\r\n    rowClassName,\r\n    rowStyle,\r\n    includeVerticalScrollbar,\r\n    ...remainingProps\r\n}) => {\r\n    const _className = `${includeVerticalScrollbar ? 'flexable-vertical-scroll-overlay' : ''}${ className ? ` ${className}`: '' }`;\r\n    const transformRows = (keyPrefix) => (children, passthroughProps) => (React.Children.map(children, (c, i) => {\r\n        return React.cloneElement(c, {\r\n            key: `${keyPrefix}-${i}`,\r\n            style: rowStyle,\r\n            className: rowClassName,\r\n            columnDefinitions: columnDefinitions,\r\n            rowData: tableData[i],\r\n            includeVerticalScrollbar,\r\n            ...passthroughProps\r\n        });\r\n    }));\r\n\r\n    return (\r\n        <FlexableElement {...remainingProps}\r\n                         id=\"flexable-table-body\"\r\n                         className={_className}\r\n                         style={style}\r\n                         transformChildren={transformRows('row')}>\r\n            {!remainingProps.children && tableData.map(() => {\r\n                return (<Row />)\r\n            })}\r\n        </FlexableElement>\r\n    );\r\n};\r\n\r\nTableBodyHOC.propTypes = {\r\n    className: PropTypes.string,\r\n    rowClassName: PropTypes.string,\r\n    style: PropTypes.object,\r\n    rowStyle: PropTypes.object,\r\n    tableData: PropTypes.object,\r\n    columnDefinitions: PropTypes.array,\r\n    includeVerticalScrollbar: PropTypes.bool\r\n};\r\n\r\nTableBodyHOC.defaultProps = {\r\n    includeVerticalScrollbar: true\r\n};\r\n\r\nconst DefaultTableBody = TableBodyHOC(DefaultRow);\r\n\r\nexport default DefaultTableBody;"]}