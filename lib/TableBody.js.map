{"version":3,"sources":["../src/TableBody.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEO,IAAM,sCAAe,SAAf,YAAe,CAAC,GAAD;WAAS,gBAU/B;YATF,2BASE;YARF,mBAQE;YAPF,2BAOE;YANF,2CAME;YALF,iCAKE;YAJF,yBAIE;YAHF,yDAGE;YAFF,qBAEE;YADC,0LACD;;AACF,YAAM,mBAAgB,2BAA2B,kCAA3B,GAAgE,EAAhE,KAAsE,kBAAgB,SAAhB,GAA6B,EAA7B,CAAtF,CADJ;AAEF,YAAM,gBAAgB,SAAhB,aAAgB,CAAC,SAAD;mBAAe,UAAC,QAAD,EAAW,gBAAX;uBAAiC,gBAAM,QAAN,CAAe,GAAf,CAAmB,QAAnB,EAA6B,UAAC,CAAD,EAAI,CAAJ,EAAU;AACzG,wBAAI,CAAC,gBAAM,cAAN,CAAqB,CAArB,CAAD,EAA0B;AAC1B,+BAAO,CAAP,CAD0B;qBAA9B;AAGA,2BAAO,gBAAM,YAAN,CAAmB,CAAnB;AACH,8BAAS,kBAAa,CAAtB;AACA,+BAAO,QAAP;AACA,mCAAW,YAAX;AACA,2CAAmB,iBAAnB;AACA,iCAAS,UAAU,CAAV,CAAT;AACA;uBACG,iBAPA,CAAP,CAJyG;iBAAV;aAA9D;SAAf,CAFpB;;AAiBF,YAAI,CAAC,MAAD,EAAS;AACT,mBACI;;2CAAqB;AACjB,wBAAG,qBAAH;AACA,+BAAW,UAAX;AACA,2BAAO,KAAP;AACA,uCAAmB,cAAc,KAAd,CAAnB,GAJJ;gBAKK,CAAC,eAAe,QAAf,IAA2B,UAAU,GAAV,CAAc,UAAC,CAAD,EAAI,CAAJ,EAAU;AACjD,2BAAQ,8BAAC,GAAD,IAAK,cAAY,CAAZ,EAAL,CAAR,CADiD;iBAAV,CAA1C;gBAGA,CAAC,CAAC,eAAe,QAAf,IACC,eAAe,QAAf;aAVZ,CADS;SAAb;;AAgBA,eACI;;uCAAuB;AACN,oBAAG,qBAAH;AACA,qBAAK,MAAL;AACA,2BAAW,UAAX;AACA,uBAAO,KAAP;AACA,mCAAmB,cAAc,KAAd,CAAnB,GALjB;YAMK,CAAC,eAAe,QAAf,IAA2B,UAAU,GAAV,CAAc,UAAC,CAAD,EAAI,CAAJ,EAAU;AACjD,uBAAQ,8BAAC,GAAD,IAAK,cAAY,CAAZ,EAAL,CAAR,CADiD;aAAV,CAA1C;YAGA,CAAC,CAAC,eAAe,QAAf,IACC,eAAe,QAAf;SAXZ,CAjCE;KAV+B;CAAT;;AA2D5B,aAAa,SAAb,GAAyB;AACrB,eAAW,iBAAU,MAAV;AACX,kBAAc,iBAAU,MAAV;AACd,WAAO,iBAAU,MAAV;AACP,cAAU,iBAAU,MAAV;AACV,eAAW,iBAAU,MAAV;AACX,uBAAmB,iBAAU,KAAV;AACnB,8BAA0B,iBAAU,IAAV;AAC1B,YAAQ,iBAAU,IAAV;CARZ;;AAWA,aAAa,YAAb,GAA4B;AACxB,8BAA0B,IAA1B;CADJ;;AAIA,IAAM,mBAAmB,2BAAnB;;kBAES","file":"TableBody.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\n\r\nimport FlexableComponent from './FlexableComponent';\r\nimport FlexableElement from './FlexableElement';\r\nimport DefaultRow from './Row';\r\n\r\nexport const TableBodyHOC = (Row) => ({\r\n    className,\r\n    style,\r\n    tableData,\r\n    columnDefinitions,\r\n    rowClassName,\r\n    rowStyle,\r\n    includeVerticalScrollbar,\r\n    setRef,\r\n    ...remainingProps\r\n}) => {\r\n    const _className = `${includeVerticalScrollbar ? 'flexable-vertical-scroll-overlay' : ''}${ className ? ` ${className}`: '' }`;\r\n    const transformRows = (keyPrefix) => (children, passthroughProps) => (React.Children.map(children, (c, i) => {\r\n        if (!React.isValidElement(c)) {\r\n            return c;\r\n        }\r\n        return React.cloneElement(c, {\r\n            _key: `${keyPrefix}-${i}`,\r\n            style: rowStyle,\r\n            className: rowClassName,\r\n            columnDefinitions: columnDefinitions,\r\n            rowData: tableData[i],\r\n            includeVerticalScrollbar,\r\n            ...passthroughProps\r\n        });\r\n    }));\r\n\r\n    if (!setRef) {\r\n        return (\r\n            <FlexableElement {...remainingProps}\r\n                id=\"flexable-table-body\"\r\n                className={_className}\r\n                style={style}\r\n                transformChildren={transformRows('row')}>\r\n                {!remainingProps.children && tableData.map((d, i) => {\r\n                    return (<Row key={`row-${i}`}/>)\r\n                })}\r\n                {!!remainingProps.children &&\r\n                    remainingProps.children}\r\n            </FlexableElement>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <FlexableComponent {...remainingProps}\r\n                         id=\"flexable-table-body\"\r\n                         ref={setRef}\r\n                         className={_className}\r\n                         style={style}\r\n                         transformChildren={transformRows('row')}>\r\n            {!remainingProps.children && tableData.map((d, i) => {\r\n                return (<Row key={`row-${i}`}/>)\r\n            })}\r\n            {!!remainingProps.children &&\r\n                remainingProps.children}\r\n        </FlexableComponent>\r\n    );\r\n};\r\n\r\nTableBodyHOC.propTypes = {\r\n    className: PropTypes.string,\r\n    rowClassName: PropTypes.string,\r\n    style: PropTypes.object,\r\n    rowStyle: PropTypes.object,\r\n    tableData: PropTypes.object,\r\n    columnDefinitions: PropTypes.array,\r\n    includeVerticalScrollbar: PropTypes.bool,\r\n    setRef: PropTypes.func\r\n};\r\n\r\nTableBodyHOC.defaultProps = {\r\n    includeVerticalScrollbar: true\r\n};\r\n\r\nconst DefaultTableBody = TableBodyHOC(DefaultRow);\r\n\r\nexport default DefaultTableBody;"]}