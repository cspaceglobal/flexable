{"version":3,"sources":["../../src/utilities/fileUtils.js"],"names":["downloadToFile","getEncodedDataUri","content","fileName","mimeType","charset","a","document","createElement","textContent","download","href","click","encodeURIComponent"],"mappings":";;;;;QAUgBA,c,GAAAA,c;QAQAC,iB,GAAAA,iB;AAlBhB;;;;;;;;;;AAUO,SAASD,cAAT,CAAwBE,OAAxB,EAAiCC,QAAjC,EAAqF;AAAA,QAA1CC,QAA0C,uEAA/B,UAA+B;AAAA,QAAnBC,OAAmB,uEAAT,OAAS;;AACxF,QAAMC,IAAIC,SAASC,aAAT,CAAuB,GAAvB,CAAV;AACAF,MAAEG,WAAF,GAAgB,UAAhB;AACAH,MAAEI,QAAF,GAAaP,QAAb;AACAG,MAAEK,IAAF,GAASV,kBAAkBG,QAAlB,EAA4BC,OAA5B,EAAqCH,OAArC,CAAT;AACAI,MAAEM,KAAF;AACH;;AAEM,SAASX,iBAAT,CAA2BG,QAA3B,EAAqCC,OAArC,EAA8CH,OAA9C,EAAuD;AAC1D,qBAAeE,QAAf,iBAAmCC,OAAnC,SAA8CQ,mBAAmBX,OAAnB,CAA9C;AACH","file":"fileUtils.js","sourcesContent":["/**\r\n * function to export data to a file\r\n * Note that \"breaks\" React encapsulation, but it's a throw-away element\r\n * that does not actually get added to the DOM\r\n * @constructor\r\n * @param {string} content - The content to be represented as a file.\r\n * @param {string} fileName - The name of the file to be exported (with extension)\r\n * @param {string} mimeType - The MIME type of the file\r\n * @param {string} charset - The charset for the file (defaults to utf-8)\r\n */\r\nexport function downloadToFile(content, fileName, mimeType = 'text/csv', charset = 'utf-8') {\r\n    const a = document.createElement('a');\r\n    a.textContent = 'download';\r\n    a.download = fileName;\r\n    a.href = getEncodedDataUri(mimeType, charset, content);\r\n    a.click();\r\n}\r\n\r\nexport function getEncodedDataUri(mimeType, charset, content) {\r\n    return `data:${mimeType};charset=${charset},${encodeURIComponent(content)}`;\r\n}"]}