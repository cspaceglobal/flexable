{"version":3,"sources":["../src/FlexableComponent.js"],"names":["FlexableComponent","props","id","className","children","_children","style","transformChildren","text","omitProps","remainingProps","kids","_transformChildren","passthroughProps","Children","map","isValidElement","c","cloneElement","transformedChildren","count","propTypes","string","object","any","array","func","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEMA,iB;;;;;;;;;;iCACO;AAAA,yBACwG,KAAKC,KAD7G;AAAA,gBACGC,EADH,UACGA,EADH;AAAA,gBACOC,SADP,UACOA,SADP;AAAA,gBACkBC,QADlB,UACkBA,QADlB;AAAA,gBAC4BC,SAD5B,UAC4BA,SAD5B;AAAA,gBACuCC,KADvC,UACuCA,KADvC;AAAA,gBAC8CC,iBAD9C,UAC8CA,iBAD9C;AAAA,gBACiEC,IADjE,UACiEA,IADjE;AAAA,gBACuEC,SADvE,UACuEA,SADvE;AAAA,gBACqFC,cADrF;;AAEL,gBAAIC,OAAOP,WAAWA,QAAX,GAAsBC,SAAjC;AACA,gBAAIO,qBAAqBL,iBAAzB;AACA,gBAAMM,mBAAmB,sBAAOH,cAAP,EAAuBD,SAAvB,CAAzB;;AAEA,gBAAI,CAACG,kBAAL,EAAyB;AACrBA,qCAAqB;AAAA,2BAAM,gBAAME,QAAN,CAAeC,GAAf,CAAmBJ,IAAnB,EAAyB,aAAK;AACrD;AACA,4BAAI,CAAC,gBAAMK,cAAN,CAAqBC,CAArB,CAAL,EAA8B;AAC1B,mCAAOA,CAAP;AACH;AACD,+BAAO,gBAAMC,YAAN,CAAmBD,CAAnB,EAAsBJ,gBAAtB,CAAP;AACH,qBAN0B,CAAN;AAAA,iBAArB;AAOH;;AAED,gBAAMM,sBAAsBP,mBAAmBD,IAAnB,EAAyBE,gBAAzB,CAA5B;;AAEA,mBACI;AAAA;AAAA,kBAAK,IAAIX,EAAT,EAAa,OAAOI,KAApB,EAA2B,WAAWH,SAAtC;AACM,gCAAMW,QAAN,CAAeM,KAAf,CAAqBT,IAArB,IAA6B,CAA7B,GAAiCQ,mBAAjC,GAAuDX;AAD7D,aADJ;AAKH;;;;;AACJ;;AAEDR,kBAAkBqB,SAAlB,GAA8B;AAC1BlB,eAAW,iBAAUmB,MADK;AAE1BhB,WAAO,iBAAUiB,MAFS;AAG1Bf,UAAM,iBAAUgB,GAHU;AAI1Bf,eAAW,iBAAUgB,KAJK;AAK1BlB,uBAAmB,iBAAUmB;AALH,CAA9B;;AAQA1B,kBAAkB2B,YAAlB,GAAiC;AAC7BnB,UAAM,EADuB;AAE7BF,WAAO,sBAAc,IAAd,CAFsB;AAG7BG,eAAW,EAHkB;AAI7BN,eAAW;AAJkB,CAAjC;;kBAOeH,iB","file":"FlexableComponent.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\nimport except from 'except';\r\n\r\nclass FlexableComponent extends Component  {\r\n    render() {\r\n        const { id, className, children, _children, style, transformChildren, text, omitProps, ...remainingProps } = this.props;\r\n        let kids = children ? children : _children;\r\n        let _transformChildren = transformChildren;\r\n        const passthroughProps = except(remainingProps, omitProps);\r\n\r\n        if (!_transformChildren) {\r\n            _transformChildren = () => React.Children.map(kids, c => {\r\n                // (trash) => trash;\r\n                if (!React.isValidElement(c)) {\r\n                    return c;\r\n                }\r\n                return React.cloneElement(c, passthroughProps);\r\n            })\r\n        }\r\n\r\n        const transformedChildren = _transformChildren(kids, passthroughProps);\r\n\r\n        return (\r\n            <div id={id} style={style} className={className}>\r\n                { React.Children.count(kids) > 0 ? transformedChildren : text }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nFlexableComponent.propTypes = {\r\n    className: PropTypes.string,\r\n    style: PropTypes.object,\r\n    text: PropTypes.any,\r\n    omitProps: PropTypes.array,\r\n    transformChildren: PropTypes.func,\r\n};\r\n\r\nFlexableComponent.defaultProps = {\r\n    text: '',\r\n    style: Object.create(null),\r\n    omitProps: [],\r\n    className: '',\r\n};\r\n\r\nexport default FlexableComponent;\r\n"]}